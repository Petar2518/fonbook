server:
  port: 8090

spring:
  data:
    mongodb:
      host: ${MONGO_HOST:localhost}
      port: 27017
      database: search
      username: rootuser
      password: rootpass
      authentication-database: admin
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    port: ${RABBITMQ_PORT:5672}

springdoc:
  api-docs:
    path: /api-docs

logging:
  level:
    org.springframework.web: DEBUG

reservation:
  service:
    url: #

accommodation:
  service:
    url: # accommodation service

rabbitmq:
  notify:
    delete:
      exchange:
        "notify-delete-exchange"
      accommodation:
        routing-key:
          "accommodation-notify-delete-key"
        queue:
          "accommodation-notify-queue"
      accommodationUnit:
        routing-key:
          "accommodation-unit-notify-delete-key"
        queue:
          "accommodation-unit-notify-queue"
      address:
        routing-key:
          "address-notify-delete-key"
        queue:
          "address-notify-queue"
      price:
        routing-key:
          "price-notify-delete-key"
        queue:
          "price-notify-queue"
  success:
    delete:
      exchange:
        "confirm-delete-exchange"
      accommodation:
        routing-key:
          "accommodation-confirm-delete-key"
      accommodationUnit:
        routing-key:
          "accommodation-unit-confirm-delete-key"
      address:
        routing-key:
          "address-confirm-delete-key"
      price:
        routing-key:
          "price-confirm-delete-key"
  failure:
    delete:
      exchange:
        "decline-delete-exchange"
      accommodation:
        routing-key:
          "accommodation-decline-delete-key"
      accommodationUnit:
        routing-key:
          "accommodation-unit-decline-delete-key"
      address:
        routing-key:
          "address-decline-delete-key"
      price:
        routing-key:
          "price-decline-delete-key"
    insert:
      exchange:
        "failure-insert-exchange"
      accommodation:
        routing-key:
          "accommodation-failure-insert-key"
      accommodationUnit:
        routing-key:
          "accommodation-unit-failure-insert-key"
      address:
        routing-key:
          "address-failure-insert-key"
      price:
        routing-key:
          "price-failure-insert-key"
  corresponding-queue-name-for-service:
    accommodation: accommodation-queue
    reservation: reservation-queue
  accommodation-exchange:
    name:
      "Accommodation-CRUD-Exchange"
    routing-key:
      "accommodation.details.change"
  reservation-exchange:
    name:
      "Reservation-CRUD-Exchange"
    routing-key:
      "reservation.details.change"

map:
  corresponding-message-dto-class-for-string:
    Accommodation: rs.ac.bg.fon.searchservice.dto.message.AccommodationMessageDto
    AccommodationUnit: rs.ac.bg.fon.searchservice.dto.message.AccommodationUnitMessageDto
    Address: rs.ac.bg.fon.searchservice.dto.message.AddressMessageDto
    Price: rs.ac.bg.fon.searchservice.dto.message.PriceMessageDto
    Reservation: rs.ac.bg.fon.searchservice.dto.message.ReservationMessageDto