plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'rs.ac.bg.fon'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    implementation(
            'org.springframework.cloud:spring-cloud-starter-gateway',
            'com.google.code.gson:gson:2.7',
            'org.mapstruct:mapstruct:1.5.5.Final',
            'org.slf4j:slf4j-api:latest.release',
            'io.jsonwebtoken:jjwt-api:0.12.5'
    )
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor(
            'org.projectlombok:lombok',
            'org.mapstruct:mapstruct-processor:1.5.5.Final'
    )
    runtimeOnly(
            'org.postgresql:postgresql',
            'io.jsonwebtoken:jjwt-impl:0.12.5',
            'io.jsonwebtoken:jjwt-jackson:0.12.5'
    )
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jib {
    from {
        image = 'eclipse-temurin:17'
    }
    to {
        image = "docker.io/${project.findProperty('docker-username')}/${project.findProperty('docker-image-name')}:${project.findProperty('docker-image-tag')}"
        auth {
            username = "${project.findProperty('docker-username')}"
            password = "${project.findProperty('docker-password')}"
        }
    }
}

task skipSpringBootTestAndDataJpaTest(type: Test) {
    useJUnitPlatform {
        excludeTags 'springboot', 'datajpa'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
